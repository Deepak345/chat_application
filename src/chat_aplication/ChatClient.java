/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat_aplication;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;
import static javax.swing.text.DefaultCaret.ALWAYS_UPDATE;

/**
 *
 * @author deepak
 */
public class ChatClient extends javax.swing.JFrame implements ActionListener,Runnable
{
    
    ServerSocket ss;
    Socket s;
    BufferedReader br;
    PrintWriter pw;
    /**
     * Creates new form ChatClient
     */
    public ChatClient() {
        initComponents();
        DefaultCaret caret=(DefaultCaret) chat.getCaret();
        caret.setUpdatePolicy(ALWAYS_UPDATE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnD = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        msg = new javax.swing.JTextField();
        btnS = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextArea();
        ipAdd = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(237, 204, 247));

        btnD.setBackground(new java.awt.Color(252, 198, 203));
        btnD.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnD.setForeground(new java.awt.Color(209, 70, 70));
        btnD.setText("Disconnect");
        btnD.setToolTipText("disconnect the connection");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        btnC.setBackground(new java.awt.Color(187, 255, 184));
        btnC.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnC.setForeground(new java.awt.Color(110, 191, 100));
        btnC.setText("Connect");
        btnC.setToolTipText("connect to server");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        msg.setBackground(new java.awt.Color(253, 222, 190));
        msg.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        msg.setToolTipText("enter your message here");
        msg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                msgKeyPressed(evt);
            }
        });

        btnS.setBackground(new java.awt.Color(205, 205, 251));
        btnS.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        btnS.setForeground(new java.awt.Color(129, 129, 196));
        btnS.setText("Send");
        btnS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSActionPerformed(evt);
            }
        });

        chat.setBackground(new java.awt.Color(254, 250, 246));
        chat.setColumns(20);
        chat.setFont(new java.awt.Font("TlwgTypewriter", 0, 15)); // NOI18N
        chat.setRows(5);
        chat.setAutoscrolls(true);
        jScrollPane1.setViewportView(chat);

        ipAdd.setFont(new java.awt.Font("Ubuntu", 2, 14)); // NOI18N
        ipAdd.setText("enter ip ");
        ipAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ipAddKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(btnS, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnD)
                                .addGap(18, 18, 18)
                                .addComponent(ipAdd)
                                .addGap(18, 18, 18)
                                .addComponent(btnC))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ipAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
       connect();
    }//GEN-LAST:event_btnCActionPerformed

    private void btnSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSActionPerformed
        send();
    }//GEN-LAST:event_btnSActionPerformed

    private void msgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_msgKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        send();
        }
    }//GEN-LAST:event_msgKeyPressed

    private void ipAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipAddKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        connect();
        }
    }//GEN-LAST:event_ipAddKeyPressed

    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        this.setVisible(false);
       /* try {
            ss.close();
            s.close();
        } 
        catch (IOException ex) {
            Logger.getLogger(ChatClient.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        new ChatApp().setVisible(true);
        
    }//GEN-LAST:event_btnDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnS;
    private javax.swing.JTextArea chat;
    private javax.swing.JTextField ipAdd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField msg;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void run() {
        while(true)
        {
            try
            {
                String text=br.readLine();
                chat.append("\n"+text);
            }
            catch(Exception e)
            {
            }
        }
    }

    private void send() {
        String text=msg.getText();
        chat.append(text+"\n\t --me "+new Date()+"\n");
        pw.println(text+"\n\t --"+ChatApp.user+" "+new Date()+"\n");
        msg.setText("");
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void connect() {
        try {
            s=new Socket(ipAdd.getText(), 10001);
            pw=new PrintWriter(s.getOutputStream(), true);
            br=new BufferedReader(new InputStreamReader(s.getInputStream()));
        } 
        catch (IOException ex) {
            Logger.getLogger(ChatClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        new Thread(this).start();
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
